{"code":"import { __awaiter } from \"tslib\";\nimport { select, input } from \"@inquirer/prompts\";\nimport { clone } from \"./clone\";\nimport path from \"path\";\nimport fs from \"fs-extra\";\nexport const templates = new Map([\n    [\n        \"Vite-Vue3-TypeScript-template\",\n        {\n            name: \"Vite-Vue3-TypeScript-template\",\n            downloadUrl: \"git@gitee.com:tian__shuai/template-vite5--vue3.git\",\n            description: \"vite + vue3 + ts初始模版\",\n            branch: \"master\",\n        },\n    ],\n    [\n        \"Vite-Vue3-TypeScript-ElementUI-template\",\n        {\n            name: \"Vite-Vue3-TypeScript-ElementUI-template\",\n            downloadUrl: \"git@gitee.com:tian__shuai/template-vite5--vue3.git\",\n            description: \"vite + vue3 + ts + elementplus 初始模版\",\n            branch: \"element\",\n        },\n    ],\n    [\n        \"Vite-Vue3-TypeScript-ElementUI-layout-template\",\n        {\n            name: \"Vite-Vue3-TypeScript-ElementUI-layout-template\",\n            downloadUrl: \"git@gitee.com:tian__shuai/template-vite5--vue3.git\",\n            description: \"vite + vue3 + ts + elementplus + layout 初始模版\",\n            branch: \"element_layout\",\n        },\n    ],\n]);\n// 初始化模版列表\nconst templateList = Array.from(templates).map((item) => {\n    const [name, info] = item;\n    return {\n        name,\n        value: name,\n        description: info.description,\n    };\n});\n// 是否覆盖同名项目\nexport function isOverwrite(projectName) {\n    return select({\n        message: \"项目已存在，是否覆盖？\",\n        choices: [\n            { name: \"覆盖\", value: true },\n            { name: \"不覆盖\", value: false },\n        ],\n    });\n}\nexport function create(projectName) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!projectName) {\n            projectName = yield input({ message: \"请输入项目名称\" });\n        }\n        // 判断是否覆盖同名项目\n        const projectPath = path.resolve(`${process.cwd()}/project`, projectName); // 这里的路径保持和 clone.ts 中 simple-git 的 dirName 一致\n        if (fs.existsSync(projectPath)) {\n            const isRun = yield isOverwrite(projectName);\n            if (isRun) {\n                yield fs.remove(projectPath);\n            }\n            else {\n                return;\n            }\n        }\n        const templateName = yield select({\n            message: \"请选择模版\",\n            choices: templateList,\n        });\n        const info = templates.get(templateName);\n        if (info) {\n            clone(info.downloadUrl, projectName, [\"-b\", info.branch]);\n        }\n    });\n}\n","references":["/Users/abel/Documents/study/架构/tianbenchu-cli/node_modules/.pnpm/@inquirer+prompts@3.3.2/node_modules/@inquirer/prompts/dist/cjs/types/index.d.ts","/Users/abel/Documents/study/架构/tianbenchu-cli/src/command/clone.ts","/Users/abel/Documents/study/架构/tianbenchu-cli/node_modules/.pnpm/@types+fs-extra@11.0.4/node_modules/@types/fs-extra/index.d.ts"]}
